/*
 * Netmaker
 *
 * # API Usage  Most actions that can be performed via API can be performed via UI. We recommend managing your networks using the official netmaker-ui project. However, Netmaker can also be run without the UI, and all functions can be achieved via API calls. If your use case requires using Netmaker without the UI or you need to do some troubleshooting/advanced configuration, using the API directly may help.  # Authentication  API calls must be authenticated via a header of the format -H “Authorization: Bearer <YOUR_SECRET_KEY>” There are two methods to obtain YOUR_SECRET_KEY: 1. Using the masterkey. By default, this value is “secret key,” but you should change this on your instance and keep it secure. This value can be set via env var at startup or in a config file (config/environments/< env >.yaml). See the [Netmaker](https://docs.netmaker.org/index.html) documentation for more details. 2. Using a JWT received for a node. This can be retrieved by calling the /api/nodes/<network>/authenticate endpoint, as documented below.
 *
 * API version: 0.24.0
 * Generated by: Swagger Codegen (https://github.com/swagger-api/swagger-codegen.git)
 */

package swagger

// ServerConfig - server conf struct
type ServerConfig struct {
	APIConnString string `json:"APIConnString,omitempty"`
	APIHost string `json:"APIHost,omitempty"`
	APIPort string `json:"APIPort,omitempty"`
	AllowedEmailDomains string `json:"AllowedEmailDomains,omitempty"`
	AllowedOrigin string `json:"AllowedOrigin,omitempty"`
	AuthProvider string `json:"AuthProvider,omitempty"`
	AzureTenant string `json:"AzureTenant,omitempty"`
	BasicAuth string `json:"BasicAuth,omitempty"`
	Broker string `json:"Broker,omitempty"`
	BrokerType string `json:"BrokerType,omitempty"`
	CacheEnabled string `json:"CacheEnabled,omitempty"`
	ClientID string `json:"ClientID,omitempty"`
	ClientSecret string `json:"ClientSecret,omitempty"`
	CoreDNSAddr string `json:"CoreDNSAddr,omitempty"`
	DNSKey string `json:"DNSKey,omitempty"`
	DNSMode string `json:"DNSMode,omitempty"`
	Database string `json:"Database,omitempty"`
	DeployedByOperator bool `json:"DeployedByOperator,omitempty"`
	DisableRemoteIPCheck string `json:"DisableRemoteIPCheck,omitempty"`
	DisplayKeys string `json:"DisplayKeys,omitempty"`
	EgressesLimit int64 `json:"EgressesLimit,omitempty"`
	EmqxRestEndpoint string `json:"EmqxRestEndpoint,omitempty"`
	Environment string `json:"Environment,omitempty"`
	FrontendURL string `json:"FrontendURL,omitempty"`
	HostNetwork string `json:"HostNetwork,omitempty"`
	IngressesLimit int64 `json:"IngressesLimit,omitempty"`
	IsEE string `json:"IsEE,omitempty"`
	JwtValidityDuration *Duration `json:"JwtValidityDuration,omitempty"`
	LicenseValue string `json:"LicenseValue,omitempty"`
	MQPassword string `json:"MQPassword,omitempty"`
	MQUserName string `json:"MQUserName,omitempty"`
	MachinesLimit int64 `json:"MachinesLimit,omitempty"`
	MasterKey string `json:"MasterKey,omitempty"`
	MessageQueueBackend string `json:"MessageQueueBackend,omitempty"`
	MetricsExporter string `json:"MetricsExporter,omitempty"`
	NetclientAutoUpdate string `json:"NetclientAutoUpdate,omitempty"`
	NetclientEndpointDetection string `json:"NetclientEndpointDetection,omitempty"`
	NetmakerTenantID string `json:"NetmakerTenantID,omitempty"`
	NetworksLimit int64 `json:"NetworksLimit,omitempty"`
	NodeID string `json:"NodeID,omitempty"`
	OIDCIssuer string `json:"OIDCIssuer,omitempty"`
	Platform string `json:"Platform,omitempty"`
	PublicIPService string `json:"PublicIPService,omitempty"`
	RacAutoDisable bool `json:"RacAutoDisable,omitempty"`
	RestBackend string `json:"RestBackend,omitempty"`
	SQLConn string `json:"SQLConn,omitempty"`
	Server string `json:"Server,omitempty"`
	ServerBrokerEndpoint string `json:"ServerBrokerEndpoint,omitempty"`
	StunList string `json:"StunList,omitempty"`
	StunPort int64 `json:"StunPort,omitempty"`
	Telemetry string `json:"Telemetry,omitempty"`
	TurnApiServer string `json:"TurnApiServer,omitempty"`
	TurnPassword string `json:"TurnPassword,omitempty"`
	TurnPort int64 `json:"TurnPort,omitempty"`
	TurnServer string `json:"TurnServer,omitempty"`
	TurnUserName string `json:"TurnUserName,omitempty"`
	UseTurn bool `json:"UseTurn,omitempty"`
	UsersLimit int64 `json:"UsersLimit,omitempty"`
	Verbosity int32 `json:"Verbosity,omitempty"`
	Version string `json:"Version,omitempty"`
	EndpointDetection bool `json:"endpoint_detection,omitempty"`
}
