/*
 * Netmaker
 *
 * # API Usage  Most actions that can be performed via API can be performed via UI. We recommend managing your networks using the official netmaker-ui project. However, Netmaker can also be run without the UI, and all functions can be achieved via API calls. If your use case requires using Netmaker without the UI or you need to do some troubleshooting/advanced configuration, using the API directly may help.  # Authentication  API calls must be authenticated via a header of the format -H “Authorization: Bearer <YOUR_SECRET_KEY>” There are two methods to obtain YOUR_SECRET_KEY: 1. Using the masterkey. By default, this value is “secret key,” but you should change this on your instance and keep it secure. This value can be set via env var at startup or in a config file (config/environments/< env >.yaml). See the [Netmaker](https://docs.netmaker.org/index.html) documentation for more details. 2. Using a JWT received for a node. This can be retrieved by calling the /api/nodes/<network>/authenticate endpoint, as documented below.
 *
 * API version: 0.24.0
 * Generated by: Swagger Codegen (https://github.com/swagger-api/swagger-codegen.git)
 */

package swagger

// LegacyNode - legacy struct for node model
type LegacyNode struct {
	Accesskey string `json:"accesskey,omitempty"`
	Action string `json:"action,omitempty"`
	Address string `json:"address,omitempty"`
	Address6 string `json:"address6,omitempty"`
	Allowedips []string `json:"allowedips,omitempty"`
	Connected string `json:"connected,omitempty"`
	// == PRO ==
	Defaultacl string `json:"defaultacl,omitempty"`
	Dnson string `json:"dnson,omitempty"`
	Egressgatewaynatenabled string `json:"egressgatewaynatenabled,omitempty"`
	Egressgatewayranges []string `json:"egressgatewayranges,omitempty"`
	Egressgatewayrequest *EgressGatewayRequest `json:"egressgatewayrequest,omitempty"`
	Endpoint string `json:"endpoint,omitempty"`
	Expdatetime int64 `json:"expdatetime,omitempty"`
	Failover string `json:"failover,omitempty"`
	Failovernode string `json:"failovernode,omitempty"`
	Firewallinuse string `json:"firewallinuse,omitempty"`
	Id string `json:"id,omitempty"`
	Ingressgatewayrange string `json:"ingressgatewayrange,omitempty"`
	Ingressgatewayrange6 string `json:"ingressgatewayrange6,omitempty"`
	Interface_ string `json:"interface,omitempty"`
	Interfaces []Iface `json:"interfaces,omitempty"`
	Internetgateway string `json:"internetgateway,omitempty"`
	Ipforwarding string `json:"ipforwarding,omitempty"`
	Isdocker string `json:"isdocker,omitempty"`
	Isegressgateway string `json:"isegressgateway,omitempty"`
	Ishub string `json:"ishub,omitempty"`
	Isingressgateway string `json:"isingressgateway,omitempty"`
	Isk8s string `json:"isk8s,omitempty"`
	Ispending string `json:"ispending,omitempty"`
	Isrelay string `json:"isrelay,omitempty"`
	Isrelayed string `json:"isrelayed,omitempty"`
	Isserver string `json:"isserver,omitempty"`
	// IsStatic - refers to if the Endpoint is set manually or dynamically
	Isstatic string `json:"isstatic,omitempty"`
	Lastcheckin int64 `json:"lastcheckin,omitempty"`
	Lastmodified int64 `json:"lastmodified,omitempty"`
	Lastpeerupdate int64 `json:"lastpeerupdate,omitempty"`
	Listenport int32 `json:"listenport,omitempty"`
	Localaddress string `json:"localaddress,omitempty"`
	Locallistenport int32 `json:"locallistenport,omitempty"`
	Macaddress string `json:"macaddress,omitempty"`
	Mtu int32 `json:"mtu,omitempty"`
	Name string `json:"name,omitempty"`
	Network string `json:"network,omitempty"`
	Networksettings *Network `json:"networksettings,omitempty"`
	Os string `json:"os,omitempty"`
	Ownerid string `json:"ownerid,omitempty"`
	Password string `json:"password,omitempty"`
	Persistentkeepalive int32 `json:"persistentkeepalive,omitempty"`
	Publickey string `json:"publickey,omitempty"`
	Relayaddrs []string `json:"relayaddrs,omitempty"`
	Server string `json:"server,omitempty"`
	Traffickeys *TrafficKeys `json:"traffickeys,omitempty"`
	Udpholepunch string `json:"udpholepunch,omitempty"`
	Version string `json:"version,omitempty"`
}
